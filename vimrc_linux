set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'L9'
Plugin 'git://git.wincent.com/command-t.git'
Plugin 'tomasr/molokai'
Plugin 'nvie/vim-flake8'
Plugin 'majutsushi/tagbar'
Plugin 'Lokaltog/vim-powerline'
Plugin 'jiangmiao/auto-pairs'
Plugin 'Valloric/YouCompleteMe'
Plugin 'elixir-lang/vim-elixir'
Plugin 'jnwhiteh/vim-golang'
Plugin 'nsf/gocode',{'rtp':'vim/'}
Plugin 'Blackrush/vim-gocode'
Plugin 'hynek/vim-python-pep8-indent'
Plugin 'dgryski/vim-godef'
Plugin 'MattesGroeger/vim-bookmarks'
Plugin 'wting/rust.vim'
Plugin 'Shutnik/jshint2.vim'
Plugin 'Valloric/MatchTagAlways'
Plugin 'tpope/vim-commentary'
Plugin 'vim-scripts/bufexplorer.zip'
"Plugin 'scrooloose/syntastic'
"Plugin 'bling/vim-airline'
"'\be' (normal open)  or
"'\bs' (force horizontal split open)  or
"'\bv' (force vertical split open)
call vundle#end()
filetype plugin indent on
filetype on
nmap <F8> :TagbarToggle<CR>
map <C-n> :NERDTreeToggle<CR>
nmap <F12> :MBEToggle<CR>
nnoremap mt :MtaJumpToOtherTag<CR>
"保存的时候进行格式判断
autocmd FileType python map <buffer> <F7> :call Flake8()<CR>
autocmd BufWritePost *.py call Flake8()
let g:flake8_show_quickfix=0
let g:flake8_quickfix_height=3
let g:flake8_ignore='F403'
let g:tagbar_ctags_bin = 'ectags'
set omnifunc=syntaxcomplete#Complete
let g:ycm_key_list_select_completion = ['<TAB>','<Down>']
let g:ycm_server_keep_logfiles = 1
let g:ycm_server_log_level = 'debug'
let g:ycm_global_ycm_extra_conf = '/home/shahuwang/.ycm_extra_conf.py'
autocmd FileType python setlocal completeopt-=preview
autocmd FileType go setlocal completeopt-=preview
set autoindent
set smartindent
set number
set noswapfile
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set autochdir
syntax on
filetype plugin indent on
filetype plugin on
autocmd FileType go compiler go
autocmd FileType go autocmd BufWritePre <buffer> Fmt
imap <C-o> <C-x> <C-o>
let g:godef_command="godef"
let g:JSLintHighlightErrorLine=0
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/
let NERDTreeIgnore = ['\.pyc$']
let NERDTreeShowBookmarks=1
set guioptions-=m
set guioptions-=T
map <silent> <F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>
set showcmd
set foldmethod=indent
set foldlevel=99
set hlsearch
set linebreak
set clipboard=unnamedplus
autocmd VimLeave * call system("xsel -ib", getreg("+"))
set guifont=Consolas\ for\ Powerline\ 12
set t_Co=256
colorscheme molokai
let g:molokai_original = 1
let g:flake8_ignore="F403"
set mousemodel=popup
set mouse=a
set vb t_vb=
set ruler
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let jshint2_read = 1
let jshint2_save = 1
let jshint2_height = 5
let g:Powerline_symbols = 'fancy'
"let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
"let g:airline_powerline_fonts = 1
"let g:airline_theme="molokai"
" Add the virtualenv's site-packages to vim path
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    sys.path.insert(0, project_base_dir)
    activate_this = os.path.join(project_base_dir,'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF

let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \},
            \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \},
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
    \}
